{"version":3,"sources":["components/Home.js","App.js","serviceWorker.js","index.js"],"names":["RECORDS","gql","RecordDetail","useQuery","loading","error","data","record","map","id","orderPlant","orderUser","createdAt","className","key","username","name","price","description","Record","isManager","heading","USER_DETAILS","OTHER_PLANTS","MainList","manager","variables","localStorage","getItem","dataR","refetchR","refetch","useState","plants","setPlants","method","setMethod","userDetails","click","e","target","value","cart","orderPlaced","otherPlants","useEffect","onClick","onPointerEnter","onPointerOut","CREATE_PLANT","AddPlantModal","props","useMutation","createplant","addPlant","a","cogoToast","success","onHide","warn","setTimeout","window","location","reload","Modal","size","aria-labelledby","centered","Header","closeButton","Title","Body","ref","node","required","type","preventDefault","LogoutMenu","useHistory","removeItem","React","modalShow","setModalShow","history","event","style","margin","fontSize","show","push","ADD_TO_CART","ORDER_PLANT","REMOVE_FROM_CART","REMOVE_FROM_PLANT","Main","cartRemove","orderRemove","order","addCart","plantId","buy","cartremove","orderremove","photo","src","background","USER_CHECK","USER_CREATE","Login","password","newUsername","newPassword","newPassword1","mutate","createUser","setData","setError","isSignup","handleClick","setItem","tokenAuth","token","signUp","marginLeft","marginTop","marginBottom","VERIFY_TOKEN","Home","setLoggedIn","setLoading","verifyToken","setToken","tokenVerify","client","ApolloClient","uri","cache","InMemoryCache","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f33e93e2.chunk.js","sourcesContent":["import React , { useState, useEffect } from 'react';\nimport { useQuery,gql,useMutation } from '@apollo/client';\nimport './home.css';\nimport { useHistory } from 'react-router-dom';\nimport cogoToast from 'cogo-toast';\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Menu, Item, MenuProvider } from 'react-contexify';\nimport 'react-contexify/dist/ReactContexify.min.css';\n\n\nconst RECORDS = gql`\n{\n    record {\n      id\n      createdAt\n      orderUser{\n        username\n        \n      }\n      orderPlant {\n        name\n        price\n        description\n      }\n    }\n  }\n`;\n\n\n\n\n const RecordDetail = () => {\n\n    const {loading, error, data } = useQuery(RECORDS);\n\n    if (loading) return <p> Loading </p>\n    if (error) return <p> error </p>\n    return data.record.map(({id , orderPlant, orderUser,createdAt}) => (\n        <>\n        <div className=\"main-card\" key={id}> \n            <div className='card-record'>\n                <div>\n                    <p> Ordered by user : <span>{orderUser.username}</span></p>\n                    <p>Plant Name : <span> {orderPlant.name}</span></p>\n                    <p>Plant price : <span>{orderPlant.price}</span> ₹</p>\n                    <p> Plant Description <span>{orderPlant.description}</span></p>\n                    <p> Created At : <span>{createdAt}</span></p>             \n                </div>\n            </div>         \n         </div>\n        </>\n    )\n   )\n}\n\nexport const Record = () => {\n\n    return (\n        <>\n        <Header isManager={false} heading = \" 📚 Records\"/>\n        <RecordDetail/>\n        </>\n    )\n\n}\n\nconst USER_DETAILS =gql`\n\nquery userDetails($username:String!){\n    userDetails(username:$username){\n      isManager\n      orderPlaced {\n        id\n        name\n        price\n        description\n        photo\n      }\n      cart {\n        id\n        name\n        price\n        description\n        photo\n      }\n    }\n  }`;\n\nconst OTHER_PLANTS = gql`\nquery otherPlants($username:String!){\n    otherPlants(username:$username){\n        id\n        name\n        price\n        description\n        photo\n    }\n  }\n`;\n\n\nconst MainList = () => {\n\n    const { data: dataR, refetch:refetchR} = useQuery(USER_DETAILS,{variables:{username:localStorage.getItem('username')}});\n    const { data, refetch} = useQuery(OTHER_PLANTS,{variables:{username:localStorage.getItem('username')}})\n    const [plants , setPlants ] = useState([]);\n    const [method , setMethod ] = useState(\"other\");\n    let manager;\n    if(dataR){\n\n        manager = dataR.userDetails.isManager;\n        \n    } \n    const click =  (e) => {\n        if(e.target.value === \"InCart\"){\n            setPlants(dataR.userDetails.cart)\n            setMethod(\"cart\")\n            refetchR();\n        }\n        else if(e.target.value === \"Buy\" ){\n            setPlants(dataR.userDetails.orderPlaced)\n            setMethod(\"buy\")\n            refetchR();\n\n\n        }\n        else if(e.target.value === \"other\"){\n            setPlants(data.otherPlants);\n            setMethod(\"other\")\n            refetch();\n\n        }\n        else {\n            setPlants([]);\n        }\n         \n    }\n    useEffect(() => {\n        if(data){\n            setPlants(data.otherPlants)\n        }\n\n\n    },[data])\n    return (\n        <>\n        <Header isManager={manager ? true: false} heading=\"🌿 Shop Plants\"></Header>\n        <div className=\"main-card\" key={true}>\n            <div className=\"sort-plants\">\n              <div>\n                <select name=\"methods\" id=\"plants\" onClick={click} onPointerEnter={click} onPointerOut={click}>\n                    <option value=\"other\">Plants</option>\n                    <option value=\"Buy\"> Plants Buyed </option>\n                    <option value=\"InCart\"> Plants in Cart</option>\n                </select>        \n                </div>\n            </div> \n         <Main plants = {plants} method = {method}/>\n        </div>\n        </>\n\n    )\n\n\n}\n\n\nconst CREATE_PLANT = gql`\nmutation createPlant($name:String!,$price:Int!,$description:String!) {\n    createPlant(name:$name,price:$price,description:$description){\n      ok\n    }\n  }\n`;\n\n\nconst AddPlantModal = (props) => {\n\n    let name,price,description;\n\n    const [createplant] = useMutation(CREATE_PLANT);\n    const addPlant = async ({variables}) => {\n\n        try {\n            const data  = await createplant({variables})\n            cogoToast.success(\"Plant created successfully.\");\n            props.onHide();\n\n            \n        }\n        catch (e) {\n            cogoToast.warn(\"can't create plant\");\n            props.onHide();\n\n         }\n        setTimeout(function () {window.location.reload()},200);\n    }\n   \n\n\n    return (\n      <Modal\n        {...props}\n        size=\"md\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n           Add Plant\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n         <div className='add-plant'>\n             <div>\n                 <label> Name: </label>\n            <input  \n                ref={node => {\n                name = node;\n                }} \n                name='text'\n                required\n                >\n            </input>\n             </div>\n             <div>\n                 <label> Price: </label>\n                 <input  \n                ref={node => {\n                price = node;\n                }} \n                name='text'\n                type='number'\n                required\n                >\n            </input>\n             </div>\n             <div>\n                 <label>Description: </label>\n                 <textarea\n                 required  \n                ref={node => {\n                description = node;\n                }} \n                >\n            </textarea>\n             </div>\n             <div>\n                 <input className=\"submit-addplant\" type=\"submit\"\n                 onClick = {e => {\n                    e.preventDefault();\n                    addPlant({variables: {name:name.value,price:price.value,description:description.value}});\n                    name.value = '';\n                    description.value = '';\n                    price.value ='';}}\n                ></input>\n             </div>\n         </div>\n        </Modal.Body>\n        \n      </Modal>\n    );\n  }\n\n  const LogoutMenu = () => {\n\n    const history = useHistory();\n\tconst onClick = () => {\n\n\t\tlocalStorage.removeItem('username')\n        localStorage.removeItem('token')\n        setTimeout(function () {window.location.reload()},100);\n\n\t}\n\n\treturn (\n\t\t<Menu id='menu_id' >\n        <Item onClick={onClick}>Logout</Item>\n      </Menu>\n\n\t)\n}\n\n\n\nconst Header = ({ isManager ,heading }) => {\n\n    const [modalShow, setModalShow] = React.useState(false);\n    const history = useHistory();\n    const username = localStorage.getItem('token') ? localStorage.getItem('username') : \"  \";\n\n\n    return (\n        <>\n        <div className='header'>\n             <h4>Dphi Nursery</h4>\n             <MenuProvider id=\"menu_id\" event=\"onClick\" style={{margin:\"1rem\"}}>\n             <p>\n              {username}\n             <LogoutMenu>\n              </LogoutMenu>\n            </p>\n            </MenuProvider>\n        </div>\n        <section className='menu'>\n            <div> <p style={{fontSize:'20px'}}>{heading}</p>  </div>\n            {isManager ? <div>\n                <button onClick={() => setModalShow(true)} > ➕ Add Plant</button>\n                <AddPlantModal\n                    show={modalShow}\n                    onHide={() => setModalShow(false)}\n                />\n                <button onClick={() => history.push('/records')} > 📚 Records </button>\n            </div> : \"  \" }\n\n        </section>\n        </>\n    );\n}\n\n\n\n\n\nconst USER_LIST = gql`\nquery {\n\tplants {\n    id\n    name\n    price\n    description\n    photo\n  }\n}\n`;\n\nconst ADD_TO_CART = gql`\nmutation addToCart($username:String!,$plantId:Int!) {\n    addToCart(username:$username,plantId:$plantId){\n      ok\n    }\n  }\n`;\n\nconst ORDER_PLANT =gql`\nmutation orderPlant($username:String!,$plantId:Int!) {\n    orderPlant(username:$username,plantId:$plantId){\n      ok\n    }\n  }\n`;\n\nconst REMOVE_FROM_CART = gql\n`mutation removeCart($username:String!,$plantId:Int!) {\n    removeCart(username:$username,plantId:$plantId){\n      ok\n    }\n  }\n`;\n\nconst REMOVE_FROM_PLANT =gql`\nmutation removePlant($username:String!,$plantId:Int!) {\n    removePlant(username:$username,plantId:$plantId){\n      ok\n    }\n  }\n`;\n\n\n\nconst Main = ({plants,method}) => {\n\n    const [cart] = useMutation(ADD_TO_CART);\n    const [ cartRemove ] = useMutation(REMOVE_FROM_CART);\n    const [ orderRemove ] = useMutation(REMOVE_FROM_PLANT);\n    const [order] = useMutation(ORDER_PLANT);\n\n  \n    let username = localStorage.getItem('username');\n\n    const addCart = async (e,method) => {\n\n        try {\n            const data  = await cart({variables:{username:localStorage.getItem('username'),plantId:e.target.id}})\n            cogoToast.success(\"Plant added to cart\");\n\n        }\n        catch (e) {\n            cogoToast.warn(\"can't add to cart\");\n\n         }\n    }\n    const buy = async(e,method) => {\n\n        try {\n            const data  = await order({variables:{username:localStorage.getItem('username'),plantId:e.target.id}})\n            cogoToast.success(\"Plant buyed\");\n\n        }\n        catch (e) {\n            cogoToast.warn(\"can't buy plant\");\n         }\n\n    }\n    const cartremove = async(e,method) => {\n\n        try {\n            const data  = await cartRemove({variables:{username:localStorage.getItem('username'),plantId:e.target.id}})\n            cogoToast.success(\"Plant removed from cart\");\n\n        }\n        catch (e) {\n            cogoToast.warn(\"can't remove plant\");\n         }\n    }\n\n    const orderremove = async(e,method) => {\n\n        try {\n            const data  = await orderRemove({variables:{username:localStorage.getItem('username'),plantId:e.target.id}})\n            cogoToast.success(\"Plant removed from buying..\");\n\n        }\n        catch (e) {\n            cogoToast.warn(\"can't remove plant from buying..\");\n        }\n    }\n\n    useEffect(() => {\n            \n    },[plants])\n    \n    \n    return plants.map(({ id , name, price, description, photo  }) => (\n    <>\n        <div className='card'  key={id}>\n                <img src=\"https://source.unsplash.com/300x400/?plants\"></img>\n                    <div>\n                     <h3>{name}</h3> \n                     <p>Price : {price} ₹ </p>\n                     <p>Description : {description}</p>\n                     <div className='card-button'>\n                     {method === \"cart\" && method !== \"buy\" && method !==\"other\"? \n                     <>\n                     <a id ={id} style={{background:\"#a4a19a\"}} onClick = {(e) => {cartremove(e,method)}} >🛒Remove from Cart </a> \n                     <a id ={id} onClick = {(e) => {buy(e,method)}}>↗️ Buy </a> \n                     </>\n                     : \" \" }\n                     {method !== \"cart\" && method === \"buy\" && method !==\"other\"? \n                     <>\n                     <a id ={id} onClick = {(e) => {addCart(e,method)}}  >🛒Add to Cart </a> \n                     <a id ={id} onClick = {(e) => {orderremove(e,method)}}  style={{background:\"#a4a19a\"}} >↗️ Remove from Buyed </a> \n                     </>\n                     : \" \" }\n                     {method !== \"cart\" && method !== \"buy\" && method ===\"other\"? \n                     <>\n                     <a id ={id} onClick = {(e) => {addCart(e,method)}}  >🛒Add to Cart </a> \n                     <a id ={id} onClick = {(e) => {buy(e,method)}}>↗️ Buy </a> \n                     </>\n                     : \" \" }\n                     \n                     </div>\n                    </div>\n             </div>          \n        </>\n    ));\n}\n\n\n\n\nconst USER_CHECK = gql`\nmutation tokenAuth($username:String!,$password:String!){\n    tokenAuth(username:$username ,password:$password){\n      token\n    }\n  }`;\n\n\n\nconst USER_CREATE = gql`\nmutation createUser($username:String!,$password:String!) {\n    createUser(input: {\n      username:$username\n      password:$password\n    }) {\n      ok\n    }\n  }\n`\n\n\nconst Login = () => {\n\n    let username,password,newUsername,newPassword,newPassword1;\n    const history = useHistory();\n    const [mutate] = useMutation(USER_CHECK)\n    const [createUser] = useMutation(USER_CREATE)\n    const [data, setData] = useState()\n    const [error, setError] = useState()\n    const [signup , isSignup ] = useState(true);\n\n    const handleClick = async ({variables}) => {\n    try {\n        const data  = await mutate({variables})\n        localStorage.setItem('token', data.data.tokenAuth.token);\n        localStorage.setItem('username',variables.username) \n        setData(data);\n        cogoToast.success(\"Logging in...\");\n        setTimeout(function () {window.location.reload()},100);\n\n\n        \n    }\n    catch (e) {\n        setError(e);\n     }\n    }\n    const signUp = async ({variables}) => {\n        try {\n            const data  = await createUser({variables})\n            cogoToast.success(\n            <div>\n                <b>Account created ;)</b>\n                <div>Now login....</div>\n            </div>);\n            setTimeout(function () {window.location.reload()},100);\n            \n        }\n        catch (e) {\n            isSignup(false)\n         }\n        }\n\n    \n    useEffect(() => {\n        \n    },[])\n\n    return (\n        <>\n        <Header isManager={false} heading=\" \"/>\n        <div>\n            <div className=\"info\">\n            <p>\n                <i>Manager</i> <br></br>\n                <span> <i>username: manager </i> </span> <br></br>\n                <span> <i>password: manager </i> </span> <br></br>\n                </p>\n                <p>\n                <i>testuser</i> <br></br>\n                <span> <i>username: test </i> </span> <br></br>\n                <span> <i>password: test </i> </span> <br></br>\n                </p>\n            </div>\n        <div className=\"login-sign\">\n        <div>\n           <form className =\"login-form\">   <div>\n            <h3 > Login </h3>\n            <p className='error-login'>{error ? \" * Enter valid credentails\":\" \"}</p>\n            <label>Username: </label>\n            <input\n            ref={node => {\n                username = node;\n            }}\n            name= \"username\"\n            type=\"text\"\n            style={{marginLeft:'13px'}}\n            />\n            </div>\n            <div>\n                <label> Password:  </label>\n            <input\n            ref={node => {\n                password = node;\n            }}\n            name=\"password\"\n            type=\"password\"\n            style={{marginLeft:'16px'}}\n            />\n            </div>\n            <div><button className=\"btns\"  onClick = {e => {\n                e.preventDefault();\n                handleClick({variables: {username:username.value,password:password.value}});\n                username.value = '';\n                password.value = '';\n            }}type=\"submit\">Login</button></div>\n        </form>\n        </div>\n        <div> <h2> Or </h2></div>\n        <div>\n            <form>\n                <div className=\"sign-form\">\n                <h3 style={{marginTop:'1rem',marginBottom:'1rem',margin:'0'}}> Sign Up</h3>\n                <div>\n                <p className='error-login'>{signUp ? \" \":\" * Can't create account\"}</p>\n                <label>Username</label>    \n                    <input\n                    ref={node => {\n                        newUsername = node;\n                    }}\n                     style={{marginLeft:'65px'}}>\n                \n                     </input>\n                </div>\n                <div>\n                <label>Password</label>\n                    <input \n                    style={{marginLeft:'70px'}}\n                    ref={node => {\n                        newPassword1 = node;\n                    }}\n                    type=\"password\"\n                    >\n                    </input>\n                </div>\n                <div>\n                <label>Confirm Password </label>\n                    <input\n                    ref={node => {\n                        newPassword = node;\n                    }}\n                    style={{marginLeft:'11px'}}\n                    type=\"password\"\n                    ></input>\n                </div>\n                <div><button className=\"btns\" type=\"submit\" onClick = {e => {\n                e.preventDefault();\n                signUp({variables: {username:newUsername.value,password:newPassword.value}});\n                newUsername.value = '';\n                newPassword.value = '';\n                newPassword1.value = '';\n                }}\n                >Sign Up</button>\n                </div>\n            </div>\n            \n            </form>\n        </div>\n        </div>\n    </div>\n    </>\n\n    )\n}\n\n\n\nconst VERIFY_TOKEN = gql`\nmutation verifyToken($token:String!){\n    verifyToken(token:$token){\n      payload\n    }\n  }\n`;\n\n\nconst Home = () => {\n\n    const [isloggedIn , setLoggedIn ] = useState(null);\n    const [loading, setLoading ] = useState();\n    const [verifyToken] = useMutation(VERIFY_TOKEN)\n    const [token , setToken ] = useState(localStorage.getItem('token') ? localStorage.getItem('token'):null)\n\n\n\n    const tokenVerify = async() => {\n        setLoading(true)\n        try {\n            setToken(localStorage.getItem('token'))\n            const data = await verifyToken({variables:{token:token}})\n            setLoggedIn(true);\n    \n        }\n        catch (e){\n            setLoggedIn(false);\n        }\n    \n    \n    }\n    \n    useEffect(() => {\n        if(token){\n            tokenVerify();\n        }\n        else {\n            setLoggedIn(false);\n        }\n        setLoading(false);\n        \n    },[]);\n\n\n    if (loading) return <p> Loading ..</p>\n    if (token) return  <MainList key={1}/>\n    return  <Login/>\n\n    \n\n}\n\nexport default Home;\n\n\n\n","import React from 'react';\nimport './App.css';\nimport { ApolloClient, InMemoryCache } from '@apollo/client';\nimport { ApolloProvider } from '@apollo/client';\nimport Home from './components/Home';\nimport {HashRouter as Router,Route} from 'react-router-dom';\nimport { Record } from './components/Home';\n\n\nconst client = new ApolloClient({\n  uri: 'https://dphi-nursery.herokuapp.com/graphql/', \n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <Router>\n    <ApolloProvider client={client}>\n      <div className=\"App\">\n        <Route exact path=\"/\" component={Home} />\n        <Route path=\"/records/\" component={Record} />\n      </div>\n    </ApolloProvider>\n    </Router>\n  ); \n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}